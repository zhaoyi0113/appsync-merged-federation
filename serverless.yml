service: ${opt:stage}-bff-merged-api

plugins:
  - serverless-appsync-plugin
  - serverless-pseudo-parameters
  - serverless-esbuild

useDotenv: true
variablesResolutionMode: 20210326
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ${opt:region}
  stackName: ${self:service}
  stage: ${opt:stage}
  timeout: 30
  tags:
    COMPONENT_NAME: bff
    PART_NAME: api
    STAGE: ${opt:stage}
    service: bff-merged-api
    env: ${opt:stage}
  stackTags: ${self:provider.tags}

  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - '*'
          Resource: 'arn:aws:lambda:*'

  tracing:
    lambda: true

package:
  individually: true

custom:
  appSync:
    - name: ${self:provider.stackName}-user
      schema: subgraph-user/schema/user.graphql
      authenticationType: API_KEY
      additionalAuthenticationProviders:
        - authenticationType: AWS_IAM
      xrayEnabled: true
      dataSources:
        - type: AWS_LAMBDA
          name: getUser
          config:
            functionName: getUserHandler
            iamRoleStatements:
              - Effect: 'Allow'
                Action:
                  - '*'
                Resource: '*'
      mappingTemplates:
        - type: Query
          request: false
          response: false
          dataSource: getUser
          field: getUser
        
    - name: ${self:provider.stackName}-product
      schema: subgraph-product/schema/product.graphql
      authenticationType: API_KEY
      additionalAuthenticationProviders:
        - authenticationType: AWS_IAM
      xrayEnabled: true
      dataSources:
        - type: AWS_LAMBDA
          name: getProduct
          config:
            functionName: getProductHandler
            iamRoleStatements:
              - Effect: 'Allow'
                Action:
                  - '*'
                Resource: '*'
        - type: AWS_LAMBDA
          name: getPurchases
          config:
            functionName: getPurchasesHandler
            iamRoleStatements:
              - Effect: 'Allow'
                Action:
                  - '*'
                Resource: '*'
        - type: AWS_LAMBDA
          name: publishProductUpdatedEvent
          config:
            functionName: publishProductUpdatedEventHandler
            iamRoleStatements:
              - Effect: 'Allow'
                Action:
                  - '*'
                Resource: '*'

      mappingTemplates:
        - type: User
          request: subgraph-user/resources/getPurchases.vtl
          response: false
          dataSource: getPurchases
          field: purchases
        - type: Query
          request: false
          response: false
          dataSource: getProduct
          field: getProduct
        - type: Mutation
          request: false
          response: false
          dataSource: publishProductUpdatedEvent
          field: publishProductUpdatedEvent

functions:
  - ${file(subgraph-user/resources/lambdas.yml)}
  - ${file(subgraph-product/resources/lambdas.yml)}

resources:
  - ${file(merged/resources/merged.yml)}